/*jslint node:true, vars:true, bitwise:true, unparam:true */
/*jshint unused:true */
/*global */
/*
 * Author: Zion Orent <zorent@ics.com>
 * Copyright (c) 2014 Intel Corporation.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

var upmBuzzer = require("jsupm_buzzer");
// Initialize on GPIO 5
var myBuzzer = new upmBuzzer.Buzzer(5);
var chords = [];
chords.push(upmBuzzer.DO);
chords.push(upmBuzzer.RE);
chords.push(upmBuzzer.MI);
chords.push(upmBuzzer.FA);
chords.push(upmBuzzer.SOL);
chords.push(upmBuzzer.LA);
chords.push(upmBuzzer.SI);
chords.push(upmBuzzer.DO);
chords.push(upmBuzzer.SI);
var chordIndex = 0;

// Print sensor name
console.log(myBuzzer.name());

function melody() {
  if (chords.length != 0) {
    //Play sound for one second
    console.log(myBuzzer.playSound(chords[chordIndex], 1000000));
    chordIndex++;
    //Reset the sound to start from the beginning.
    if (chordIndex > chords.length - 1) chordIndex = 0;
  }
}
setInterval(melody, 100);

// Print message when exiting
process.on('SIGINT', function () {
  console.log("Exiting...");
  process.exit(0);
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL21haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkJBLElBQUksWUFBWSxRQUFRLGNBQVIsQ0FBaEI7O0FBRUEsSUFBSSxXQUFXLElBQUksVUFBVSxNQUFkLENBQXFCLENBQXJCLENBQWY7QUFDQSxJQUFJLFNBQVMsRUFBYjtBQUNBLE9BQU8sSUFBUCxDQUFZLFVBQVUsRUFBdEI7QUFDQSxPQUFPLElBQVAsQ0FBWSxVQUFVLEVBQXRCO0FBQ0EsT0FBTyxJQUFQLENBQVksVUFBVSxFQUF0QjtBQUNBLE9BQU8sSUFBUCxDQUFZLFVBQVUsRUFBdEI7QUFDQSxPQUFPLElBQVAsQ0FBWSxVQUFVLEdBQXRCO0FBQ0EsT0FBTyxJQUFQLENBQVksVUFBVSxFQUF0QjtBQUNBLE9BQU8sSUFBUCxDQUFZLFVBQVUsRUFBdEI7QUFDQSxPQUFPLElBQVAsQ0FBWSxVQUFVLEVBQXRCO0FBQ0EsT0FBTyxJQUFQLENBQVksVUFBVSxFQUF0QjtBQUNBLElBQUksYUFBYSxDQUFqQjs7O0FBR0EsUUFBUSxHQUFSLENBQVksU0FBUyxJQUFULEVBQVo7O0FBRUEsU0FBUyxNQUFULEdBQ0E7QUFDSSxNQUFJLE9BQU8sTUFBUCxJQUFpQixDQUFyQixFQUNBOztBQUVJLFlBQVEsR0FBUixDQUFhLFNBQVMsU0FBVCxDQUFtQixPQUFPLFVBQVAsQ0FBbkIsRUFBdUMsT0FBdkMsQ0FBYjtBQUNBOztBQUVBLFFBQUksYUFBYSxPQUFPLE1BQVAsR0FBZ0IsQ0FBakMsRUFDTCxhQUFhLENBQWI7QUFDRTtBQUNKO0FBQ0QsWUFBWSxNQUFaLEVBQW9CLEdBQXBCOzs7QUFHQSxRQUFRLEVBQVIsQ0FBVyxRQUFYLEVBQXFCLFlBQ3JCO0FBQ0MsVUFBUSxHQUFSLENBQVksWUFBWjtBQUNBLFVBQVEsSUFBUixDQUFhLENBQWI7QUFDQSxDQUpEIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKmpzbGludCBub2RlOnRydWUsIHZhcnM6dHJ1ZSwgYml0d2lzZTp0cnVlLCB1bnBhcmFtOnRydWUgKi9cbi8qanNoaW50IHVudXNlZDp0cnVlICovXG4vKmdsb2JhbCAqL1xuLypcbiAqIEF1dGhvcjogWmlvbiBPcmVudCA8em9yZW50QGljcy5jb20+XG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQgSW50ZWwgQ29ycG9yYXRpb24uXG4gKlxuICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nXG4gKiBhIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbiAqIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuICogd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuICogZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvXG4gKiBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG9cbiAqIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbiAqXG4gKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZVxuICogaW5jbHVkZWQgaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4gKlxuICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCxcbiAqIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuICogTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkRcbiAqIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkVcbiAqIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT05cbiAqIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTlxuICogV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG4gKi9cblxudmFyIHVwbUJ1enplciA9IHJlcXVpcmUoXCJqc3VwbV9idXp6ZXJcIik7XG4vLyBJbml0aWFsaXplIG9uIEdQSU8gNVxudmFyIG15QnV6emVyID0gbmV3IHVwbUJ1enplci5CdXp6ZXIoNSk7XG52YXIgY2hvcmRzID0gW107XG5jaG9yZHMucHVzaCh1cG1CdXp6ZXIuRE8pO1xuY2hvcmRzLnB1c2godXBtQnV6emVyLlJFKTtcbmNob3Jkcy5wdXNoKHVwbUJ1enplci5NSSk7XG5jaG9yZHMucHVzaCh1cG1CdXp6ZXIuRkEpO1xuY2hvcmRzLnB1c2godXBtQnV6emVyLlNPTCk7XG5jaG9yZHMucHVzaCh1cG1CdXp6ZXIuTEEpO1xuY2hvcmRzLnB1c2godXBtQnV6emVyLlNJKTtcbmNob3Jkcy5wdXNoKHVwbUJ1enplci5ETyk7XG5jaG9yZHMucHVzaCh1cG1CdXp6ZXIuU0kpO1xudmFyIGNob3JkSW5kZXggPSAwO1xuXG4vLyBQcmludCBzZW5zb3IgbmFtZVxuY29uc29sZS5sb2cobXlCdXp6ZXIubmFtZSgpKTtcblxuZnVuY3Rpb24gbWVsb2R5KClcbntcbiAgICBpZiAoY2hvcmRzLmxlbmd0aCAhPSAwKVxuICAgIHtcbiAgICAgICAgLy9QbGF5IHNvdW5kIGZvciBvbmUgc2Vjb25kXG4gICAgICAgIGNvbnNvbGUubG9nKCBteUJ1enplci5wbGF5U291bmQoY2hvcmRzW2Nob3JkSW5kZXhdLCAxMDAwMDAwKSApO1xuICAgICAgICBjaG9yZEluZGV4Kys7XG4gICAgICAgIC8vUmVzZXQgdGhlIHNvdW5kIHRvIHN0YXJ0IGZyb20gdGhlIGJlZ2lubmluZy5cbiAgICAgICAgaWYgKGNob3JkSW5kZXggPiBjaG9yZHMubGVuZ3RoIC0gMSlcblx0XHRcdGNob3JkSW5kZXggPSAwO1xuICAgIH1cbn1cbnNldEludGVydmFsKG1lbG9keSwgMTAwKTtcblxuLy8gUHJpbnQgbWVzc2FnZSB3aGVuIGV4aXRpbmdcbnByb2Nlc3Mub24oJ1NJR0lOVCcsIGZ1bmN0aW9uKClcbntcblx0Y29uc29sZS5sb2coXCJFeGl0aW5nLi4uXCIpO1xuXHRwcm9jZXNzLmV4aXQoMCk7XG59KTtcbiJdfQ==